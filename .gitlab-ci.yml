image: registry.gitlab.com/c11k/serviceandgoods:latest

stages:
  - test
  - stage

test:
  stage: test
  script:
    - cp .env.testing .env
    - touch database/database.sqlite
    - composer install --no-plugins --no-scripts
    - php artisan key:generate
    - composer pretest
    - composer test
  cache:
    key: "$CI_PROJECT_PATH_SLUG-$CI_COMMIT_BRANCH"
    paths:
    - vendor/
  artifacts:
    paths:
    - tests/coverage
  except:
    - ci
  interruptible: true

dusktest:
  when: manual
  allow_failure: true
  image: edbizarro/gitlab-ci-pipeline-php:7.4-chromium
  stage: test
  script:
    - yarn config set cache-folder .yarn
    - yarn install --pure-lockfile
    - yarn run prod
    - composer install --no-plugins --no-scripts --no-progress --no-suggest --prefer-dist --optimize-autoloader
    - cp .env.dusk.ci .env
    - php artisan key:generate
    - touch database/database.sqlite
    - php artisan migrate:refresh
    - php artisan db:seed --class UsersTableSeeder
    - php artisan serve > /dev/null 2>&1 &
    - ./vendor/laravel/dusk/bin/chromedriver-linux --port=9515 &
    - sleep 5
    - php artisan dusk
  cache:
    key: "$CI_PROJECT_PATH_SLUG-$CI_COMMIT_BRANCH"
    paths:
      - vendor/
  except:
    - ci
  interruptible: true
  artifacts:
    paths:
      - ./storage/logs  # for debugging
      - ./tests/Browser/screenshots # for Dusk screenshots
      - ./tests/Browser/console
    expire_in: 7 days
    when: always

deploy_staging:
  stage: stage
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ~/.composer/vendor/bin/envoy run deploy --web_hook=$LOG_SLACK_WEBHOOK_URL --release_url=$CI_ENVIRONMENT_URL
  environment:
    name: staging
    url: https://c11k.c11k.com
  only:
    - tags

build_images:
  image: docker:git
  services:
  - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest .
    - docker push registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest
    - docker image tag registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest $CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest
    - docker build -t registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:dusk phpdocker/dusk
    - docker push registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:dusk
  when: manual
  only:
    changes:
      - Dockerfile

pages:
  stage: stage
  dependencies:
    - test
  script:
    - rm -rf public
    - mv tests/coverage public
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master
    - development
